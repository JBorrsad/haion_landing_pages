---
import Logo from "./Logo.astro";

const navItems = [
  {
    title: "Nosotros",
    label: "sobre-nosotros",
    url: "/#sobre-nosotros",
  },
  {
    title: "Servicios",
    label: "servicios",
    url: "/#servicios",
  },
  {
    title: "Fiscal",
    label: "fiscal",
    url: "/fiscal",
  },
  {
    title: "Laboral",
    label: "laboral",
    url: "/laboral",
  },
  {
    title: "Contable",
    label: "contable",
    url: "/contable",
  },
]
---

<header
  class="header-animated fixed top-0 z-50 w-full bg-white shadow-lg"
>
  <!-- Desktop Navigation -->
  <div class="hidden md:flex items-center justify-between w-full px-4 py-3 mx-auto">
    <!-- Logo -->
    <div class="flex items-center">
      <a href="/" id="logo-link-desktop" class="flex items-center">
        <Logo class="w-28 h-auto text-gray-800" />
      </a>
    </div>

    <!-- Navigation -->
    <nav
      class="flex px-2 md:px-3 text-xs md:text-sm font-medium text-gray-700 items-center space-x-6"
    >
      {
        navItems.map((link) => (
          <a
            class="relative block px-1 md:px-2 py-2 transition hover:text-yellow-600 text-center min-w-0 flex-shrink-0 uppercase tracking-wide"
            aria-label={link.label}
            href={link.url}
            data-section={link.label}
          >
            {link.title}
          </a>
        ))
      }
      
      <!-- Contact Button -->
      <a
        href="/contacto"
        class="px-4 py-2 bg-yellow-200 text-gray-800 font-medium rounded-full hover:bg-yellow-300 transition-colors uppercase tracking-wide text-sm"
      >
        Contacto
      </a>
      
      <!-- Search Icon -->
      <button 
        class="p-2 text-gray-600 hover:text-yellow-600 transition-colors"
        aria-label="Buscar"
      >
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m21 21-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
        </svg>
      </button>
    </nav>
  </div>

  <!-- Mobile Navigation -->
  <div class="md:hidden">
    <!-- Mobile Header -->
    <div class="flex items-center justify-between w-full px-4 py-3">
      <!-- Hamburger Menu Button -->
      <button 
        id="mobile-menu-toggle"
        class="p-2 text-gray-600 hover:text-yellow-600 transition-colors"
        aria-label="MenÃº"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>

      <!-- Logo centered -->
      <div class="flex items-center">
        <a href="/" id="logo-link-mobile" class="flex items-center">
          <Logo class="w-24 h-auto text-gray-800" />
        </a>
      </div>

      <!-- Empty space for balance -->
      <div class="w-10"></div>
    </div>

    <!-- Mobile Menu -->
    <div 
      id="mobile-menu"
      class="hidden bg-white border-t border-gray-200 shadow-lg"
    >
      <nav class="px-4 py-6 space-y-4">
        {
          navItems.map((link) => (
            <a
              class="block py-3 px-4 text-gray-700 hover:text-yellow-600 hover:bg-gray-50 rounded-lg transition-colors uppercase tracking-wide font-medium"
              aria-label={link.label}
              href={link.url}
              data-section={link.label}
            >
              {link.title}
            </a>
          ))
        }
        
        <!-- Mobile Contact Button -->
        <a
          href="/contacto"
          class="block py-3 px-4 bg-yellow-200 text-gray-800 font-medium rounded-lg hover:bg-yellow-300 transition-colors uppercase tracking-wide text-center mt-4"
        >
          Contacto
        </a>
      </nav>
    </div>
  </div>
</header>

<script is:inline>
	function initNavbar() {
		const path = window.location.pathname
		const isHome = path === "/" || path === "/index.html"
		
		// Obtener TODOS los links (desktop + mobile)
		const allLinks = document.querySelectorAll('a[data-section]')
		
		console.log('navbar cargado')
		console.log('ruta:', path)
		console.log('links:', allLinks.length)
		
		// Logo animation
		const logos = document.querySelectorAll('#logo-link-desktop, #logo-link-mobile')
		logos.forEach(logo => {
			logo?.addEventListener('click', () => {
				sessionStorage.setItem('animate-hero', 'true')
			})
		})
		
		// Mobile menu
		const toggle = document.getElementById("mobile-menu-toggle")
		const menu = document.getElementById("mobile-menu")
		
		if (toggle && menu) {
			toggle.addEventListener("click", () => {
				menu.classList.toggle("hidden")
				toggle.innerHTML = menu.classList.contains("hidden")
					? '<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path></svg>'
					: '<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>'
			})
			
			menu.querySelectorAll("a").forEach(link => {
				link.addEventListener("click", () => {
					menu.classList.add("hidden")
					toggle.innerHTML = '<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path></svg>'
				})
			})
		}
		
		// Resaltar link activo
		function setActive(section) {
			allLinks.forEach(link => {
				const label = link.getAttribute('aria-label')
				if (label === section) {
					link.classList.add("text-yellow-600", "font-bold")
					console.log('resaltado:', section)
				} else {
					link.classList.remove("text-yellow-600", "font-bold")
				}
			})
		}
		
		// Paginas especificas
		if (!isHome) {
			if (path.includes("/fiscal")) setActive("fiscal")
			else if (path.includes("/laboral")) setActive("laboral")
			else if (path.includes("/contable")) setActive("contable")
		}
		
		// Pagina principal: scroll spy
		if (isHome) {
			const sections = document.querySelectorAll("section[id]")
			console.log('secciones:', sections.length)
			
			function checkScroll() {
				const scroll = window.scrollY + 200
				let active = ""
				
				sections.forEach(section => {
					const top = section.offsetTop
					const bottom = top + section.offsetHeight
					
					if (scroll >= top && scroll < bottom) {
						active = section.id
					}
				})
				
				if (active) setActive(active)
			}
			
			window.addEventListener("scroll", checkScroll)
			checkScroll()
			
			// Scroll suave
			allLinks.forEach(link => {
				link.addEventListener("click", e => {
					const href = link.getAttribute("href")
					if (href?.includes("#")) {
						e.preventDefault()
						const id = href.split("#")[1]
						document.getElementById(id)?.scrollIntoView({ behavior: "smooth" })
					}
				})
			})
		}
	}
	
	// Ejecutar al cargar
	if (document.readyState === 'loading') {
		document.addEventListener('DOMContentLoaded', initNavbar)
	} else {
		initNavbar()
	}
	
	// Ejecutar en navegacion Astro
	document.addEventListener('astro:page-load', initNavbar)
</script>

<style>
  header {
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
  }

  body.play-hero-reveal .header-animated {
    opacity: 0;
    transform: translateY(-100%);
    animation: headerSlideDown 0.6s ease-out 1.5s forwards;
  }

  body:not(.play-hero-reveal) .header-animated {
    opacity: 1;
    transform: translateY(0);
  }

  @keyframes headerSlideDown {
    0% {
      opacity: 0;
      transform: translateY(-100%);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

